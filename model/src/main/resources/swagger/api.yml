swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8088
basePath: /
tags:
  - name: basic-error-controller
    description: Basic Error Controller
  - name: client-controller
    description: Client Controller
  - name: home-controller
    description: Home Controller
  - name: tour-controller
    description: Tour Controller
  - name: tour-dto-controller
    description: Tour Dto Controller
paths:
  /:
    get:
      tags:
        - home-controller
      summary: getVersion
      operationId: getVersionUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /clients:
    get:
      tags:
        - client-controller
      summary: clients
      operationId: clientsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Client'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - client-controller
      summary: createClient
      operationId: createClientUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: client
          description: client
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - client-controller
      summary: updateClient
      operationId: updateClientUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: client
          description: client
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /clients/{id}:
    get:
      tags:
        - client-controller
      summary: findById
      operationId: findByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Client'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - client-controller
      summary: deleteClient
      operationId: deleteClientUsingDELETE
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /tours:
    get:
      tags:
        - tour-controller
      summary: tours
      operationId: toursUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Tour'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - tour-controller
      summary: createTour
      operationId: createTourUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tour
          description: tour
          required: true
          schema:
            $ref: '#/definitions/Tour'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - tour-controller
      summary: updateTour
      operationId: updateTourUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tour
          description: tour
          required: true
          schema:
            $ref: '#/definitions/Tour'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /tours/{id}:
    get:
      tags:
        - tour-controller
      summary: tourById
      operationId: tourByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tour'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - tour-controller
      summary: deleteTour
      operationId: deleteTourUsingDELETE
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int32
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /toursDto:
    get:
      tags:
        - tour-dto-controller
      summary: tourWithDateFilter
      operationId: tourWithDateFilterUsingGET
      produces:
        - '*/*'
      parameters:
        - name: dateFrom
          in: query
          description: dateFrom
          required: true
          type: string
          format: localDate
        - name: dateTo
          in: query
          description: dateTo
          required: true
          type: string
          format: localDate
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TourDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /tours_quantity:
    get:
      tags:
        - tour-dto-controller
      summary: tourWithQuantityClients
      operationId: tourWithQuantityClientsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TourDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Client:
    type: object
    required:
      - firstName
      - lastName
    properties:
      clientId:
        type: integer
        format: int32
      firstName:
        type: string
        minLength: 2
        maxLength: 20
      lastName:
        type: string
        minLength: 2
        maxLength: 30
      tourId:
        type: integer
        format: int32
        minimum: 1
        exclusiveMinimum: false
    title: Client
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  Tour:
    type: object
    required:
      - dateTour
      - direction
    properties:
      dateTour:
        type: string
        example: yyyy-MM-dd
      direction:
        type: string
      tourId:
        type: integer
        format: int32
        minimum: 1
        exclusiveMinimum: false
    title: Tour
  TourDto:
    type: object
    properties:
      dateTour:
        type: string
        example: yyyy-MM-dd
      direction:
        type: string
      quantityClients:
        type: integer
        format: int32
      tourId:
        type: integer
        format: int32
    title: TourDto
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
